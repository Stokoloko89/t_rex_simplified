{"version":3,"file":"t-rex-root-config.js","mappings":"uMAAAA,EAAOC,QAAUC,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,CCrBAG,EAAoBK,EAAKR,IACH,oBAAXS,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeZ,EAASS,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeZ,EAAS,aAAc,CAAEa,OAAO,K,oCCgBvD,IAAAC,qBAAoB,CAClBC,KAAM,qBACNC,IAAK,IACIC,OAAOC,OAAO,sBAAsBC,MAAMC,IArBrD,SAAkCA,GAChCC,QAAQD,MAAM,+BAAgCA,GAC9C,MAAME,EAAYC,SAASC,eAAe,2BACtCF,IACFA,EAAUG,UAAY,0PAMTL,EAAMM,SAAWN,kDAKlC,CAOMO,CAAyBP,GAElB,CACLQ,UAAW,IAAMC,QAAQC,UACzBC,MAAO,IAAMF,QAAQC,UACrBE,QAAS,IAAMH,QAAQC,aAI7BG,WAAY,CAAC,KACbC,YAAa,CACXC,WAAYZ,SAASC,eAAe,2BACpCY,WAAY,+BAKhBC,OAAOC,iBAAiB,2BAA6BC,IACnDlB,QAAQmB,IAAI,4BAA6BD,EAAME,UAGjDJ,OAAOC,iBAAiB,wBAA0BC,IAChDlB,QAAQmB,IAAI,yBAA0BD,EAAME,WAI9C,IAAAC,OAAM,CACJC,gBAAgB,IAGlBtB,QAAQmB,IAAI,yC","sources":["webpack://@t-rex/host-app/external system \"single-spa\"","webpack://@t-rex/host-app/webpack/bootstrap","webpack://@t-rex/host-app/webpack/runtime/make namespace object","webpack://@t-rex/host-app/./src/t-rex-root-config.js"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__496__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerApplication, start } from 'single-spa';\r\n\r\n// Error handling for microfrontend loading\r\nfunction handleMicrofrontendError(error) {\r\n  console.error('Microfrontend loading error:', error);\r\n  const container = document.getElementById('microfrontend-container');\r\n  if (container) {\r\n    container.innerHTML = `\r\n      <div class=\"error\">\r\n        <h3>Application Loading Error</h3>\r\n        <p>Failed to load the buying flow application. Please try refreshing the page.</p>\r\n        <details>\r\n          <summary>Technical Details</summary>\r\n          <pre>${error.message || error}</pre>\r\n        </details>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n// Register the buying flow microfrontend\r\nregisterApplication({\r\n  name: '@t-rex/buying-flow',\r\n  app: () => {\r\n    return System.import('@t-rex/buying-flow').catch(error => {\r\n      handleMicrofrontendError(error);\r\n      // Return a minimal lifecycle to prevent single-spa errors\r\n      return {\r\n        bootstrap: () => Promise.resolve(),\r\n        mount: () => Promise.resolve(),\r\n        unmount: () => Promise.resolve(),\r\n      };\r\n    });\r\n  },\r\n  activeWhen: ['/'],\r\n  customProps: {\r\n    domElement: document.getElementById('microfrontend-container'),\r\n    apiBaseUrl: 'http://localhost:8080/api',\r\n  },\r\n});\r\n\r\n// Global error handler for single-spa\r\nwindow.addEventListener('single-spa:routing-event', (event) => {\r\n  console.log('Single-SPA routing event:', event.detail);\r\n});\r\n\r\nwindow.addEventListener('single-spa:app-change', (event) => {\r\n  console.log('Single-SPA app change:', event.detail);\r\n});\r\n\r\n// Start single-spa\r\nstart({\r\n  urlRerouteOnly: true,\r\n});\r\n\r\nconsole.log('T-Rex root config loaded successfully');\r\n\r\n// Development helpers\r\nif (process.env.NODE_ENV === 'development') {\r\n  window.singleSpa = {\r\n    getAppNames: () => window.System.resolve('@t-rex/buying-flow'),\r\n    getAppStatus: (name) => window.singleSpa.getAppStatus(name),\r\n  };\r\n}\r\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__496__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","value","registerApplication","name","app","System","import","catch","error","console","container","document","getElementById","innerHTML","message","handleMicrofrontendError","bootstrap","Promise","resolve","mount","unmount","activeWhen","customProps","domElement","apiBaseUrl","window","addEventListener","event","log","detail","start","urlRerouteOnly"],"sourceRoot":""}