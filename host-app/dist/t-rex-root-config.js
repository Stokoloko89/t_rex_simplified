System.register(["single-spa"],function(e,t){var n={};return{setters:[function(e){n.registerApplication=e.registerApplication,n.start=e.start}],execute:function(){e((()=>{"use strict";var e={496:e=>{e.exports=n}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};r.r(o);var i=r(496);return(0,i.registerApplication)({name:"@t-rex/buying-flow",app:()=>System.import("@t-rex/buying-flow").catch(e=>(function(e){console.error("Microfrontend loading error:",e);const t=document.getElementById("microfrontend-container");t&&(t.innerHTML=`\n      <div class="error">\n        <h3>Application Loading Error</h3>\n        <p>Failed to load the buying flow application. Please try refreshing the page.</p>\n        <details>\n          <summary>Technical Details</summary>\n          <pre>${e.message||e}</pre>\n        </details>\n      </div>\n    `)}(e),{bootstrap:()=>Promise.resolve(),mount:()=>Promise.resolve(),unmount:()=>Promise.resolve()})),activeWhen:["/"],customProps:{domElement:document.getElementById("microfrontend-container"),apiBaseUrl:"http://localhost:8080/api"}}),window.addEventListener("single-spa:routing-event",e=>{console.log("Single-SPA routing event:",e.detail)}),window.addEventListener("single-spa:app-change",e=>{console.log("Single-SPA app change:",e.detail)}),(0,i.start)({urlRerouteOnly:!0}),console.log("T-Rex root config loaded successfully"),o})())}}});
//# sourceMappingURL=t-rex-root-config.js.map